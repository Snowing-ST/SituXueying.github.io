I"R<font face="仿宋">基于深度学习文本分类的网络新闻情感指数编制（七）<br />计算网络新闻情感指数</font>
<style>
    body {font-family: "华文中宋"}
</style>

<h2 id="main-step-7computing-online-news-sentiment-index-">Main step 7:<center>computing Online News Sentiment Index </center></h2>
<h3 id="description">description:</h3>
<ul>
  <li>compute six sub-indexes according to all the tagged news</li>
  <li>synthesize Online News Sentiment Index</li>
</ul>

<h3 id="code-explanation">code explanation:</h3>

<h4 id="1-compute-index-of-each-quarter-according-to-the-tagged-news">1. compute index of each quarter according to the tagged news</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_index</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">prefix</span><span class="p">):</span>
    <span class="s">"""从打好标签的文本中计算出每个季度的指数"""</span>
    <span class="k">if</span> <span class="s">"year"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="ow">or</span> <span class="s">"quarter"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
        <span class="n">time</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">"date"</span><span class="p">],</span><span class="nb">format</span><span class="o">=</span><span class="s">"</span><span class="si">%</span><span class="s">Y年</span><span class="si">%</span><span class="s">m月</span><span class="si">%</span><span class="s">d日"</span><span class="p">)</span>
        <span class="n">data</span><span class="p">[</span><span class="s">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">.</span><span class="n">year</span><span class="p">)</span>
        <span class="n">data</span><span class="p">[</span><span class="s">"quarter"</span><span class="p">]</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">.</span><span class="n">quarter</span><span class="p">)</span>

    <span class="n">grouped</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">"year"</span><span class="p">,</span><span class="s">"quarter"</span><span class="p">])</span>
    <span class="n">get_index</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:(</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="o">==-</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="o">==-</span><span class="mi">1</span><span class="p">))</span>
<span class="c1">#    grouped.agg({"label":["count"]}) #每个季度多少条
</span>    <span class="n">consumer_index</span> <span class="o">=</span> <span class="n">grouped</span><span class="o">.</span><span class="n">agg</span><span class="p">({</span><span class="s">"label"</span><span class="p">:[</span><span class="n">get_index</span><span class="p">]})</span> <span class="c1">#季度指数
</span>    <span class="n">consumer_index</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">consumer_index</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="n">droplevel</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">#去除多重索引
</span>    
    <span class="n">consumer_index</span><span class="p">[</span><span class="s">"index"</span><span class="o">+</span><span class="s">"_"</span><span class="o">+</span><span class="n">prefix</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span><span class="o">+</span><span class="n">consumer_index</span><span class="p">[</span><span class="s">"label"</span><span class="p">]</span>
    
    <span class="k">return</span> <span class="n">consumer_index</span>
</code></pre></div></div>

<h4 id="2-compute-six-sub-indexes">2. compute six sub-indexes</h4>
<ul>
  <li>input:<code class="highlighter-rouge">test_CNN.csv</code>,<code class="highlighter-rouge">train.csv</code></li>
  <li>output:<code class="highlighter-rouge">CNN指数.csv</code>,including columns named <code class="highlighter-rouge">index_all</code>,<code class="highlighter-rouge">index_test</code>,<code class="highlighter-rouge">index_train</code></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#计算index_train index_test index_all及其相关系数
</span><span class="n">consumer_index_file</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">"./raw_data/"</span><span class="o">+</span><span class="n">FLAGS</span><span class="o">.</span><span class="n">aspect</span><span class="p">,</span><span class="n">FLAGS</span><span class="o">.</span><span class="n">aspect</span><span class="o">+</span><span class="s">"CNN指数.csv"</span><span class="p">)</span>
<span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">consumer_index_file</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"已存在该指数，直接读取"</span><span class="p">)</span>
    <span class="n">consumer_index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">consumer_index_file</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="s">"gb18030"</span><span class="p">,</span><span class="n">engine</span><span class="o">=</span><span class="s">"python"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">data_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">"./raw_data/"</span><span class="o">+</span><span class="n">FLAGS</span><span class="o">.</span><span class="n">aspect</span><span class="p">,</span><span class="s">"train.csv"</span><span class="p">),</span><span class="n">sep</span> <span class="o">=</span> <span class="s">","</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="s">"gb18030"</span><span class="p">,</span><span class="n">engine</span><span class="o">=</span><span class="s">"python"</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">data_train</span><span class="p">,</span><span class="n">data_test</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">consumer_index_all</span> <span class="o">=</span> <span class="n">get_index</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">prefix</span><span class="o">=</span><span class="s">"all"</span><span class="p">)</span>
    <span class="n">consumer_index_train</span> <span class="o">=</span> <span class="n">get_index</span><span class="p">(</span><span class="n">data_train</span><span class="p">,</span><span class="n">prefix</span><span class="o">=</span><span class="s">"train"</span><span class="p">)</span>
    <span class="n">consumer_index_test</span> <span class="o">=</span> <span class="n">get_index</span><span class="p">(</span><span class="n">data_test</span><span class="p">,</span><span class="n">prefix</span><span class="o">=</span><span class="s">"test"</span><span class="p">)</span>
    <span class="n">consumer_index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">consumer_index_all</span><span class="p">[</span><span class="s">"index_all"</span><span class="p">],</span><span class="n">consumer_index_train</span><span class="p">[</span><span class="s">"index_train"</span><span class="p">],</span><span class="n">consumer_index_test</span><span class="p">[</span><span class="s">"index_test"</span><span class="p">]],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">consumer_index</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span> <span class="c1">#索引变列
</span>    <span class="n">consumer_index</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">consumer_index</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="n">consumer_index_file</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="s">"gb18030"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"训练集指数与测试集指数的相关系数为：</span><span class="si">%0.4</span><span class="s">f"</span><span class="o">%</span><span class="p">(</span><span class="n">consumer_index</span><span class="p">[[</span><span class="s">"index_train"</span><span class="p">,</span><span class="s">"index_test"</span><span class="p">]]</span><span class="o">.</span><span class="n">corr</span><span class="p">()</span><span class="o">.</span><span class="n">ix</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"训练集指数与全集指数的相关系数为：</span><span class="si">%0.4</span><span class="s">f"</span><span class="o">%</span><span class="p">(</span><span class="n">consumer_index</span><span class="p">[[</span><span class="s">"index_train"</span><span class="p">,</span><span class="s">"index_all"</span><span class="p">]]</span><span class="o">.</span><span class="n">corr</span><span class="p">()</span><span class="o">.</span><span class="n">ix</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]))</span>
<span class="n">consumer_index</span><span class="p">[[</span><span class="s">"index_train"</span><span class="p">,</span><span class="s">"index_test"</span><span class="p">]]</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
</code></pre></div></div>
<h4 id="3-synthesize-online-news-sentiment-index">3. synthesize Online News Sentiment Index</h4>
<ul>
  <li>input:<code class="highlighter-rouge">CNN指数.csv</code> of each class</li>
  <li>output:  <code class="highlighter-rouge">CNN总指数.csv</code></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">batch_read_index</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="n">ALL_INDEX_NAME</span><span class="p">):</span>
    <span class="n">classes</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
    <span class="n">all_index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">asp</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
        <span class="n">sp</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="n">asp</span><span class="p">,</span><span class="n">asp</span><span class="o">+</span><span class="n">ALL_INDEX_NAME</span><span class="p">)</span>
        <span class="n">temp_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">sp</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="s">"gb18030"</span><span class="p">,</span><span class="n">engine</span> <span class="o">=</span>  <span class="s">"python"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">asp</span><span class="p">)</span>
        <span class="n">temp_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">([</span><span class="s">"year"</span><span class="p">,</span><span class="s">"quarter"</span><span class="p">],</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="c1">#列变索引
</span>        <span class="n">temp_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">temp_df</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">asp</span><span class="o">+</span><span class="n">x</span><span class="p">)</span> <span class="c1">#更改列名
</span>        <span class="n">all_index</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">all_index</span><span class="p">,</span><span class="n">temp_df</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        
    
    <span class="n">all_index</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="c1">#索引变列
</span>    <span class="n">train_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">tr</span> <span class="k">for</span> <span class="n">tr</span> <span class="ow">in</span> <span class="n">all_index</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r"train"</span><span class="p">,</span><span class="n">tr</span><span class="p">))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">all_index</span><span class="p">[</span><span class="s">"index_train"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">all_index</span><span class="o">.</span><span class="n">ix</span><span class="p">[:,</span><span class="n">train_list</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">500</span>
    
    <span class="n">test_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">tr</span> <span class="k">for</span> <span class="n">tr</span> <span class="ow">in</span> <span class="n">all_index</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r"test"</span><span class="p">,</span><span class="n">tr</span><span class="p">))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">all_index</span><span class="p">[</span><span class="s">"index_test"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">all_index</span><span class="o">.</span><span class="n">ix</span><span class="p">[:,</span><span class="n">test_list</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">500</span>
    
    <span class="n">all_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">tr</span> <span class="k">for</span> <span class="n">tr</span> <span class="ow">in</span> <span class="n">all_index</span><span class="o">.</span><span class="n">columns</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r"all"</span><span class="p">,</span><span class="n">tr</span><span class="p">))</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">all_index</span><span class="p">[</span><span class="s">"index_all"</span><span class="p">]</span> <span class="o">=</span>  <span class="n">np</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">all_index</span><span class="o">.</span><span class="n">ix</span><span class="p">[:,</span><span class="n">all_list</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">500</span>
    <span class="n">all_index</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="n">ALL_INDEX_NAME</span><span class="p">,</span><span class="n">encoding</span><span class="o">=</span><span class="s">"gb18030"</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="n">path</span> <span class="o">=</span> <span class="s">"./raw_data"</span>    
<span class="n">ALL_INDEX_NAME</span> <span class="o">=</span> <span class="s">"CNN总指数.csv"</span>
<span class="n">batch_read_index</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="n">ALL_INDEX_NAME</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="4-validation-analysis-of-online-news-sentiment-index">4. validation analysis of Online News Sentiment Index</h4>
<ul>
  <li>compare the Online News Sentiment Index with traditional consumer confidence indexes, Consumer Confidence Index(CCI) released by National Bureau of Statistics and China Consumer Confidence Index(CCCI) released by academic institutions</li>
</ul>

<p><img src="https://github.com/Snowing-ST/Snowing-ST.github.io/blob/master/assets/images/post_images/validation_analysis.jpg" alt="compare the Online News Sentiment Index with CCI and CCCI" /></p>
:ET